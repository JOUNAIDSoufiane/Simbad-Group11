//--------------------------------------------------------
//Code generated by Papyrus Java
//--------------------------------------------------------

package main.java.softdesign;

import java.util.ArrayList;

/************************************************************/
/**
* 
*/
public class FileServer {
	/**
	 * 
	 */
	private static FileServer fileServer = new FileServer();
	/**
	 * 
	 */
	private Coordinates[] unvisited = new Coordinates[2601];
	/**
	 * 
	 */
	private ArrayList<Object> objects = new ArrayList<Object>();
	
	private ArrayList<Coordinates> blocked = new ArrayList<Coordinates>();
	/**
	 * 
	 * 
	 */
	public static FileServer getInstance() {
		return fileServer;
	}
	
	public void addBlocked(Coordinates coordinates) {
		blocked.add(coordinates);
	}
	
	public void addObject(Object object) {
		objects.add(object);
	}
	
	public boolean isObject(Coordinates coordinates) {
		for(int i = 0; i < objects.size(); i++) {
			Object object = objects.get(i);
			if(object.contains(coordinates))
				return true;
		}
		return false;
	}
	
	public boolean isblocked(Coordinates coordinates) {
		for(int i = 0; i < blocked.size(); i++) {
			Coordinates coords = blocked.get(i);
			if(coords.x == coordinates.x && coords.y == coordinates.y)
				return true;
		}
		return false;
	}
	/**
	 * 
	 * @param coordinates
	 */
	public void removeCoordinates(Coordinates coordinates) {
		//replace already visited coordinate in array with coordinate 99,99
		int location = (int) (((12.5 + coordinates.x) / 0.5 * 51) + (12.5 + coordinates.y) / 0.5); 

		unvisited[location].x = 99;
		unvisited[location].y = 99;
	}
	/**
	 * 
	 * @param coordinates
	 */
	public boolean visited(Coordinates coordinates) {
		return unvisited[(int) (((12.5 + coordinates.x) / 0.5 * 51) + (12.5 + coordinates.y) / 0.5)].x == 99;
	}
	
	public void count() {
		int visited_coords = 0, unvisited_coords = 0;
		
		for (Coordinates coordinates : unvisited) {
			if(coordinates.x == 99)
				visited_coords++;
			else
				unvisited_coords++;
		}
		
		System.out.println("Number of Visited Coordinates: " + visited_coords);
		System.out.println("Number of Unvisited Coordinates: " + unvisited_coords);
	}
	
	
	/**
	 * 
	 *
	 */
	private FileServer() {
		
		//initialize unvisited array with all possible coordinates
		int count = 0;
		double x = -12.5;
		while (x <= 12.5) {
			double y = -12.5;
			while (y <= 12.5) {
				unvisited[count] = new Coordinates(x,y);
				y += 0.5;
				count++;
			}
			x += 0.5;
		}
		
		//removing coordinates for outer walls from unvisited array
		for(double i = -12.5; i <= 12.5; i+=0.5) {
			removeCoordinates(new Coordinates(12.5, i));
			removeCoordinates(new Coordinates(-12.5, i));
			removeCoordinates(new Coordinates(i, 12.5));
			removeCoordinates(new Coordinates(i, -12.5));
		}
	}
};